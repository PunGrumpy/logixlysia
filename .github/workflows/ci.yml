name: 🤹‍♂️ Continuous Integration

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  SCOPE_OWNER: '@pungrumpy'

jobs:
  codeql:
    permissions:
      contents: read
      actions: read
      security-events: write
    uses: ./.github/workflows/codeql.yml

  lint:
    permissions:
      contents: read
      pull-requests: write
    name: ⚖️ Lint
    runs-on: ubuntu-latest
    steps:
      - name: 🛫 Checkout Code
        uses: actions/checkout@v4
      - name: 🍞 Setup Bun
        uses: oven-sh/setup-bun@v2
      - name: 🌵 Cache Bun
        id: bun-cache
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
      - name: 🔽 Install Dependencies
        run: bun install
      - name: ☣️ Linting
        run: bun run lint

  test:
    name: 🧪 Test
    runs-on: ubuntu-latest
    steps:
      - name: 🛫 Checkout Code
        uses: actions/checkout@v4
      - name: 🍞 Setup Bun
        uses: oven-sh/setup-bun@v2
      - name: 🌵 Cache Bun
        id: bun-cache
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
      - name: 🔽 Install Dependencies
        run: bun install
      - name: 🧪 Test
        run: bun run test:ci

  release:
    permissions:
      contents: write
      pull-requests: write
    if: ${{ github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, '[skip ci]') }}
    name: 🚀 Release
    runs-on: ubuntu-latest
    needs:
      - codeql
      - lint
      - test
    steps:
      - name: 🔔 Checkout
        uses: actions/checkout@v4
      - name: ⚙️ Release Please Config
        id: release-please-config
        run: |
          if [ -f .github/release-please-config.json ]; then
              echo "config-file=.github/release-please-config.json" >> $GITHUB_OUTPUT
              [ -f .github/release-please-manifest.json ] &&
              echo "manifest-file=.github/release-please-manifest.json" >> $GITHUB_OUTPUT
              [ -f .github/.release-please-manifest.json ] &&
              echo "manifest-file=.github/.release-please-manifest.json" >> $GITHUB_OUTPUT
          else
              echo "release-type=simple" >> $GITHUB_OUTPUT
          fi
      - name: 💤 Automated Release
        uses: googleapis/release-please-action@v4
        id: release-please
        with:
          config-file: ${{ steps.release-please-config.outputs.config-file }}
          release-type: ${{ steps.release-please-config.outputs.release-type }}
          manifest-file: ${{ steps.release-please-config.outputs.manifest-file }}
      - name: 🍞 Setup Bun
        uses: oven-sh/setup-bun@v2
      - name: 🔑 Setup NPM
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
      - name: 🌵 Cache Bun
        id: bun-cache
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
      - name: 🔽 Install Dependencies
        run: bun install
      - name: 🏗️ Build
        if: ${{ steps.release-please.outputs.release_created }}
        run: bun run build
      - name: 🏷️ Tag stable versions
        if: ${{ steps.release-please.outputs.release_created }}
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git remote add gh-token "https://${{ secrets.GITHUB_TOKEN }}@github.com/google-github-actions/release-please-action.git"
          git tag -d stable || true
          git push origin :stable || true
          git tag -a stable -m "chore: release stable version ${{ steps.release-please.outputs.tag_name }}"
          git push origin stable
      - name: 📦 Publish
        if: ${{ steps.release-please.outputs.release_created }}
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        continue-on-error: true
